"""
Django settings for berlyne project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
def _read_res_conf(name):
    l = open(os.path.join(RES_DIR, name + "_creds.txt")).read().strip().split(":")
    if len(l) == 1:
        return l[0]
    return l

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
RES_DIR = os.path.join(BASE_DIR, "res")

SECRET_KEY = _read_res_conf("secret_key")

DEBUG = False

# Only the proxy can connect to the app
# Host header attacks are treated at the proxy
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
ALLOWED_HOSTS = ['berlyne.wass-ctf.xyz']
CSRF_TRUSTED_ORIGINS = ALLOWED_HOSTS

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'vmapi',
    'wui',
    'autotask'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'berlyne.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'berlyne.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
__db_creds = _read_res_conf("db")
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'berlyne',
        'USER': __db_creds[0],
        'PASSWORD': __db_creds[1],
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(dir, 'static') for temp_list in TEMPLATES for dir in temp_list['DIRS']]

# Berlyne specific config
IN_TEST_MODE = False
# This is where we get the configs and provisioning
# for VMs to create
DEPLOYMENT_SRC_BASEDIR = '/opt/berlyne/deployment_src/'

# autotask
AUTOTASK_IS_ACTIVE = True
# AUTOTASK_WORKER_EXECUTABLE = "/home/rg/thesis_src/uptopy/bin/python"

# uptomate
VAGR_DEPLOYMENT_PATH = '/opt/berlyne/deployments/'
VAGR_VAGRANT_PATH = '/opt/berlyne/vagrantfiles/'

# Flatpages
SITE_ID = 1

# Email
DEFAULT_FROM_EMAIL = "noreply@ht11.org"
EMAIL_HOST = "smtp.adminflex.de"
EMAIL_HOST_USER, EMAIL_HOST_PASSWORD = _read_res_conf("email")

